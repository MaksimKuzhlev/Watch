import {
  NumberField
} from "./chunk-6GDIOX3G.js";
import "./chunk-S7KIOKQR.js";
import "./chunk-6T7EKLVW.js";
import "./chunk-KIMWSYG6.js";
import "./chunk-OOD7EB5R.js";
import "./chunk-BV36G4F5.js";
import "./chunk-QCSDD2Y2.js";
import "./chunk-VKHCUFGC.js";
import "./chunk-BRGXL5CW.js";
import "./chunk-IXNNDZUO.js";
import "./chunk-ZMXOVGUN.js";
import "./chunk-NCTTGXQP.js";
import "./chunk-WU5EZVE4.js";
import "./chunk-DVLST4BS.js";
import "./chunk-37YVODLE.js";
import "./chunk-LUEFNUZH.js";
import "./chunk-PVLUQVE7.js";
import "./chunk-TPVLHZEO.js";
import "./chunk-5HPPMUPK.js";
import "./chunk-STIA5EVJ.js";
import "./chunk-SG4ORNH2.js";
import "./chunk-XFWHNTQC.js";
import "./chunk-NIPBZV5G.js";
import "./chunk-N7CNA5ZG.js";
import "./chunk-IA6TMM44.js";
import "./chunk-KHCP4K2D.js";
import "./chunk-VUWTYCVF.js";
import "./chunk-6QJJWYV4.js";
import "./chunk-GCGCKNGA.js";
import "./chunk-CQH3N2QY.js";
import "./chunk-L3JM5TMU.js";
import "./chunk-6JYS2CNF.js";
import "./chunk-W6PN6MOV.js";
import "./chunk-XKB4TURC.js";
import "./chunk-NCWCJYKY.js";
import "./chunk-LJKNN44X.js";
import "./chunk-NCN7ELFS.js";
import "./chunk-CJPRR7ZF.js";
import "./chunk-TWLJ45QX.js";

// node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  static get properties() {
    return {
      _enabledCharPattern: {
        value: "[-+\\d]"
      }
    };
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(newVal, oldVal) {
    if (!this.__hasOnlyDigits(newVal)) {
      console.warn(
        `Trying to set invalid step size "${newVal}", which is not a positive integer, to <vaadin-integer-field>. Resetting the default value 1.`
      );
      this.step = 1;
      return;
    }
    super._stepChanged(newVal, oldVal);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d*$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_integer-field_theme_lumo_vaadin-integer-field_js.js.map
