import {
  Polymer
} from "./chunk-GFURQAWV.js";
import {
  html
} from "./chunk-W6PN6MOV.js";

// node_modules/@flowingcode/google-map/google-map-marker.js
function setupDragHandler_() {
  if (this.draggable) {
    this.dragHandler_ = google.maps.event.addListener(this.marker, "dragend", onDragEnd_.bind(this));
  } else {
    google.maps.event.removeListener(this.dragHandler_);
    this.dragHandler_ = null;
  }
}
function onDragEnd_(e, details, sender) {
  this.latitude = e.latLng.lat();
  this.longitude = e.latLng.lng();
}
Polymer({
  _template: html`
    <style>
      :host {
        display: none;
      }
    </style>

    <slot></slot>
`,
  is: "google-map-marker",
  properties: {
    marker: {
      type: Object,
      notify: true
    },
    map: {
      type: Object,
      observer: "_mapChanged"
    },
    info: {
      type: Object,
      value: null
    },
    clickEvents: {
      type: Boolean,
      value: false,
      observer: "_clickEventsChanged"
    },
    dragEvents: {
      type: Boolean,
      value: false,
      observer: "_dragEventsChanged"
    },
    icon: {
      type: Object,
      value: null,
      observer: "_iconChanged"
    },
    mouseEvents: {
      type: Boolean,
      value: false,
      observer: "_mouseEventsChanged"
    },
    zIndex: {
      type: Number,
      value: 0,
      observer: "_zIndexChanged"
    },
    longitude: {
      type: Number,
      value: null,
      notify: true
    },
    latitude: {
      type: Number,
      value: null,
      notify: true
    },
    label: {
      type: String,
      value: null,
      observer: "_labelChanged"
    },
    animation: {
      type: String,
      value: null,
      observer: "_animationChanged"
    },
    open: {
      type: Boolean,
      value: false,
      observer: "_openChanged"
    }
  },
  observers: [
    "_updatePosition(latitude, longitude)"
  ],
  detached() {
    if (this.marker) {
      this._listeners = {};
      this.setMap(null);
    }
    if (this._contentObserver) {
      this._contentObserver.disconnect();
    }
  },
  attached() {
    if (this.marker) {
      this.setMap(this.map);
    }
  },
  _updatePosition() {
    if (this.marker && this.latitude != null && this.longitude != null) {
      this.marker.setPosition(new google.maps.LatLng(parseFloat(this.latitude), parseFloat(this.longitude)));
    }
  },
  _clickEventsChanged() {
    if (this.marker) {
      if (this.clickEvents) {
        this._forwardEvent("click");
        this._forwardEvent("dblclick");
        this._forwardEvent("rightclick");
      } else {
        this._clearListener("click");
        this._clearListener("dblclick");
        this._clearListener("rightclick");
      }
    }
  },
  _dragEventsChanged() {
    if (this.marker) {
      if (this.dragEvents) {
        this._forwardEvent("drag");
        this._forwardEvent("dragend");
        this._forwardEvent("dragstart");
      } else {
        this._clearListener("drag");
        this._clearListener("dragend");
        this._clearListener("dragstart");
      }
    }
  },
  _mouseEventsChanged() {
    if (this.marker) {
      if (this.mouseEvents) {
        this._forwardEvent("mousedown");
        this._forwardEvent("mousemove");
        this._forwardEvent("mouseout");
        this._forwardEvent("mouseover");
        this._forwardEvent("mouseup");
      } else {
        this._clearListener("mousedown");
        this._clearListener("mousemove");
        this._clearListener("mouseout");
        this._clearListener("mouseover");
        this._clearListener("mouseup");
      }
    }
  },
  _animationChanged() {
    if (this.marker) {
      this.marker.setAnimation(google.maps.Animation[this.animation]);
    }
  },
  _labelChanged() {
    if (this.marker) {
      this.marker.setLabel(this.label);
    }
  },
  _iconChanged() {
    if (this.marker) {
      this.marker.setIcon(this.icon);
    }
  },
  _zIndexChanged() {
    if (this.marker) {
      this.marker.setZIndex(this.zIndex);
    }
  },
  _mapChanged() {
    if (this.marker) {
      this.setMap(null);
      google.maps.event.clearInstanceListeners(this.marker);
    }
    if (this.map && this.map instanceof google.maps.Map) {
      this._mapReady();
    }
  },
  _contentChanged() {
    if (this._contentObserver) {
      this._contentObserver.disconnect();
    }
    this._contentObserver = new MutationObserver(this._contentChanged.bind(this));
    this._contentObserver.observe(this, {
      childList: true,
      subtree: true
    });
    const content = this.innerHTML.trim();
    if (content) {
      if (!this.info) {
        this.info = new google.maps.InfoWindow();
        this.openInfoHandler_ = google.maps.event.addListener(this.marker, "click", () => {
          this.open = true;
        });
        this.closeInfoHandler_ = google.maps.event.addListener(this.info, "closeclick", () => {
          this.open = false;
        });
      }
      this.info.setContent(content);
    } else if (this.info) {
      google.maps.event.removeListener(this.openInfoHandler_);
      google.maps.event.removeListener(this.closeInfoHandler_);
      this.info = null;
    }
  },
  _openChanged() {
    if (this.info) {
      if (this.open) {
        this.info.open(this.map, this.marker);
        this.fire("google-map-marker-open");
      } else {
        this.info.close();
        this.fire("google-map-marker-close");
      }
    }
  },
  _mapReady() {
    this._listeners = {};
    this.marker = new google.maps.Marker({
      map: this.map,
      position: {
        lat: parseFloat(this.latitude),
        lng: parseFloat(this.longitude)
      },
      title: this.title,
      animation: google.maps.Animation[this.animation],
      draggable: this.draggable,
      visible: !this.hidden,
      icon: this.icon,
      label: this.label,
      zIndex: this.zIndex
    });
    this._contentChanged();
    this._clickEventsChanged();
    this._dragEventsChanged();
    this._mouseEventsChanged();
    this._openChanged();
    setupDragHandler_.bind(this)();
  },
  _clearListener(name) {
    if (this._listeners && this._listeners[name]) {
      google.maps.event.removeListener(this._listeners[name]);
      this._listeners[name] = null;
    }
  },
  _forwardEvent(name) {
    this._listeners[name] = google.maps.event.addListener(this.marker, name, (event) => {
      this.fire(`google-map-marker-${name}`, event);
    });
  },
  attributeChanged(attrName) {
    if (!this.marker) {
      return;
    }
    switch (attrName) {
      case "hidden":
        this.marker.setVisible(!this.hidden);
        break;
      case "draggable":
        this.marker.setDraggable(this.draggable);
        setupDragHandler_.bind(this)();
        break;
      case "title":
        this.marker.setTitle(this.title);
        break;
    }
  },
  getPosition() {
    return new google.maps.LatLng(parseFloat(this.latitude), parseFloat(this.longitude));
  },
  setMap(map) {
    this.marker.setMap(map);
  },
  getVisible() {
    return this.marker.getVisible();
  }
});
//# sourceMappingURL=chunk-42S22LWG.js.map
